<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registration Form</title>
  <link rel="stylesheet" href="style.css">
  <script src="script.js"></script>
</head>
<body>
  <form action="/register" method="post" id="form">
    <div>
      <label for="fullname">Full Name</label>
      <input type="text" id="fullname" name="fullname" />
      <span class="valid"></span>
      <span class="error"></span>
    </div>
    <div>
      <label for="email">Email Address</label>
      <input type="email" id="email" name="email" />
      <span class="valid"></span>
      <span class="error"></span>
    </div>
    <div>
      <label for="password">Password</label>
      <input type="password" id="password" name="password" />
      <span class="valid"></span>
      <span class="error"></span>
    </div>
    <div>
      <label for="confirm_password">Confirm Password</label>
      <input type="password" id="confirm_password" name="confirm_password" />
      <span class="valid"></span>
      <span class="error"></span>
    </div>
    <div>
      <label for="date_of_birth">Date of Birth</label>
      <input type="date" id="date_of_birth" name="date_of_birth" />
      <span class="valid"></span>
      <span class="error"></span>
    </div>
    <button type="submit" id="submit-button">Register</button>
  </form>
</body>
</html>
--------------------------------------------------------------------------------
document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("form");
    const fullname = document.getElementById("fullname");
    const email = document.getElementById("email");
    const password = document.getElementById("password");
    const confirmPassword = document.getElementById("confirm_password");
    const dateOfBirth = document.getElementById("date_of_birth");
    const submitButton = document.getElementById("submit-button");
 
    function validateInput(input, regex, errorMessage) {
      const isValid = regex.test(input.value);
      updateValidationStatus(input, isValid, errorMessage);
      return isValid;
    }
 
    function validatePasswordMatch() {
      const errorMessage = confirmPassword.value === password.value ? "" : "Passwords do not match.";
      updateValidationStatus(confirmPassword, !errorMessage, errorMessage);
      return !errorMessage;
    }
 
    function validateDateOfBirthAge() {
      const today = new Date();
      const birthDate = new Date(dateOfBirth.value);
      const age = today.getFullYear() - birthDate.getFullYear();
      return age >= 18;
    }
 
    function updateValidationStatus(element, isValid, errorMessage) {
      const errorElement = element.nextElementSibling;
      errorElement.innerHTML = isValid ? "" : errorMessage;
      errorElement.style.color = "red";
    }
 
    function enableSubmitButton() {
      const isValid =
        validateInput(fullname, /^[a-zA-Z\s]+$/, "Please enter a valid name.") &&
        validateInput(email, /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, "Invalid email address.") &&
        validateInput(password, /.{8,}/, "Password must be at least 8 characters long.") &&
        validatePasswordMatch() &&
        validateDateOfBirthAge();
 
      submitButton.disabled = !isValid;
    }
 
    form.addEventListener("submit", (event) => {
      event.preventDefault();
 
      if (enableSubmitButton()) {
        const userDetailsString =
          `User Details:\n\n` +
          `Full Name: ${fullname.value}\n` +
          `Email: ${email.value}\n` +
          `Password: ${password.value}\n` +
          `Date of Birth: ${dateOfBirth.value}`;
 
        alert(userDetailsString);
      }
    });
 
    [fullname, email, password, confirmPassword, dateOfBirth].forEach((input) => {
      input.addEventListener("input", enableSubmitButton);
    });
  });
------------------------------------------------------------------------------------------
form {
    max-width: 400px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
 
  label {
    display: block;
    margin-bottom: 5px;
  }
 
  input {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }
 
  button {
    background-color: #007bff;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
  }
 
  .status::before {
    color: green;
  }
 
  .error {
    color: red;
  }
